input {
  kafka {
    bootstrap_servers => "kafka:29092"
    topics => ["cmms-audit-logs"]
    codec => json
    client_id => "cmms-logstash"
    group_id => "cmms-logstash-group"
    auto_offset_reset => "earliest"
    consumer_threads => 1
  }
}

filter {
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }
  
  # Parse JSON fields if they exist
  if [data_before] and [data_before] != "" {
    json {
      source => "data_before"
      target => "parsed_data_before"
    }
  }
  
  if [data_after] and [data_after] != "" {
    json {
      source => "data_after"
      target => "parsed_data_after"
    }
  }
  
  if [meta_data] and [meta_data] != "" {
    json {
      source => "meta_data"
      target => "parsed_meta_data"
    }
  }
  
  # Add service name for better filtering
  mutate {
    add_field => { "service" => "cmms" }
  }
  
  # Add log level based on action type
  if [action] =~ /(Create|Update|Delete)/ {
    mutate {
      add_field => { "log_level" => "INFO" }
    }
  } else if [action] =~ /(Login|Logout)/ {
    mutate {
      add_field => { "log_level" => "INFO" }
    }
  } else if [action] =~ /(Access Denied|Error)/ {
    mutate {
      add_field => { "log_level" => "WARN" }
    }
  } else {
    mutate {
      add_field => { "log_level" => "INFO" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "cmms-audit-logs-%{+YYYY.MM.dd}"
    document_id => "%{id}"
    action => "index"
  }
  
  # Optional: Output to stdout for debugging
  stdout {
    codec => rubydebug
  }
} 